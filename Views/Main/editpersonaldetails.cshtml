  @model personaldetails.Models.Register;  
 
 
    
    
@* @{
    ViewBag.Title = "Edit";
} *@
@{ Layout = null; } 

@try{
  if(TempData["showmsg"]==null){
    <script> swal("Nice", "Data has been edited", "success");</script>
     
    
    
    
    
    
  }
  else{
    
  }
}
catch{

}
<!DOCTYPE html>    

<html>
    
        <head runat="server"> 
        
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins&display=swap">
   <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
  
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
  @* <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script> *@
  <link rel="stylesheet" type="text/css" href="~/css/personaldetailshr.css"> 
  
  @* <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script> *@
  
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script> 
  <script scr="site.js"></script>
    </head>

    

 @using (Html.BeginForm("editpersonaldetails", "Main", FormMethod.Post))
{
    
    
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Edit Personal Details</h4>
        
        <hr /> 
          @Html.ValidationSummary(true, "", new { @class = "text-danger" })  
          @* @Html.HiddenFor(model => model.empemail, new { value = Model?.empemail }) *@
             
         <div class="form-group">
            @Html.LabelFor(model => model.emp_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.emp_name, new { htmlAttributes = new { @class = "form-control",name="emp_name"  } })
                
            </div>
        </div>
        <div class="form-group">
            
            @Html.LabelFor(model => model.empemail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.empemail, new { htmlAttributes = new { @class = "form-control",name="emp_email"  } })
                
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.empaddr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.empaddr, new { htmlAttributes = new { @class = "form-control",name="emp_addr"  } })
                
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.empcity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.empcity, new { htmlAttributes = new { @class = "form-control" },name="empcity"  })
                
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.empstate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.empstate, new { htmlAttributes = new { @class = "form-control" },name="empstate"  })
                
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.emprole, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.emprole, new { htmlAttributes = new { @class = "form-control",name="emprole"  } })
                
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.empphoneno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.empphoneno, new { htmlAttributes = new { @class = "form-control",name="empphoneno"  } })
                
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.empjoiningdate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.empjoiningdate, new { htmlAttributes = new { @class = "form-control" ,name="empjoiningdate" } })
                
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.empdob, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.empdob, new { htmlAttributes = new { @class = "form-control",name="empdob"  } })
                
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.empbg, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.empbg, new { htmlAttributes = new { @class = "form-control",name="empbg"  } })
                
            </div>
        </div>
              
    

        @* <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="Submit" value="Save" class="btn btn-default"  />
            </div>
           
        </div>
        *@
        
        <div class="m-2 d-flex justify-content-center">
    <button type="submit" class="btn btn-primary" id="btn">Submit</button>

    </div>
    
    </div> 
    
              
  }


</html>